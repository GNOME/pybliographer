				-*- outline -*-

Query processing


* Configuration

  A list of available connections (databases) is built during start-up
  (from pyblio.xml) Note that this precludes specialised parsing. 

  It would be nice to have a configuration dialogue. 

* Query dialogue

  Presents a dropdown list of such servers (but allows local search as
  well). 

  Determines and loads extension module. (Using 'type' atttribute.)

  Builds Query object.

* Extension module

  Reads and sets parameters (stored during start-up). 

  Customises query:
  - marks fields available for search
  - add-on options for query dialogue (in preference to:)
  - expert search dialogue

  Builds request (object) -> Query.request.
  
* Query requestor

  Sends request and receives result.  Error processing.
   
  Determines and loads Importer module. 
  Builds an Import object. Feeds result data to import module.

* Import module

  Parses result data. Builds result set -> Import.set

  Special processing:

  - On-/Off-line correction.
  - Checking for duplicates.
  - Checking against author, journals, etc. database.
  - Flexible handling of input data (store it, ignore it, ...)
  
  Marks (and displays) the import set as a whole for reference.

* Control objects

  Saved in configuration file.
  
  Static: Connection
  Dynamic: Query, Import 

  

$Id$
